name: Build Firmware

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build BoltWrt Firmware
    runs-on: ubuntu-24.04
    steps:
      - name: Free up disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          tool-cache: true
          swap-storage: false

      - name: Initialize Environment
        run: |
          df -hT .
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget qemu-utils
          sudo timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout Code
        uses: actions/checkout@v5
      
      - name: Setup Feeds
        working-directory: /home/runner/work/BoltWrt/BoltWrt
        run: |
          ./scripts/feeds update -a

          # 移除官方 golang 包并引入自定义版本
          rm -rf feeds/packages/lang/golang
          mv feeds/BoltWrt/lang/golang feeds/packages/lang/golang

          ./scripts/feeds install -a

          # 修改 LuCI 默认主题路径
          sed -i "s#/luci-static/bootstrap#/luci-static/argon#" feeds/luci/modules/luci-base/root/etc/config/luci

          # 修正 luci-nginx 集合包的依赖
          sed -i -E "s/[[:space:]]*\+luci-theme-bootstrap//" feeds/luci/collections/luci-nginx/Makefile

          # 修改 nginx ssl 证书生成配置
          sed -i 's|/C=ZZ/ST=Somewhere/L=None/CN=OpenWrt/O=OpenWrt|/C=CN/ST=Beijing/L=Beijing/CN=BoltWrt/O=BoltWrt|' feeds/packages/net/nginx-util/src/nginx-ssl-util.hpp
          sed -i -E 's|constexpr[[:space:]]+auto[[:space:]]+validity_days[[:space:]]*=.*;|constexpr auto validity_days = 3650;|' feeds/packages/net/nginx-util/src/nginx-ssl-util.hpp

          # 修复 smartdns makefile 引用路径错误
          sed -i 's|include[[:space:]]\+\.\./\.\./lang/rust/rust-package\.mk|include $(TOPDIR)/feeds/packages/lang/rust/rust-package.mk|' feeds/BoltWrt/net/openwrt-smartdns/Makefile
          # 修正 smartdns 的编译依赖
          sed -i 's/^PKG_BUILD_DEPENDS:=PACKAGE_smartdns-ui:rust\/host$/PKG_BUILD_DEPENDS:=rust\/host/' feeds/BoltWrt/openwrt-smartdns/Makefile

          # 调整 rust 组件的 ci-llvm 下载选项、
          sed -i 's/--set=llvm\.download-ci-llvm=true/--set=llvm.download-ci-llvm=false/' feeds/packages/lang/rust/Makefile

      - name: Normalizing Build Configuration
        working-directory: /home/runner/work/BoltWrt/BoltWrt
        run: |
          mv config.txt .config
          VERSION_HASH=$( (cat .config feeds.conf.default 2>/dev/null || true) | sha256sum | awk '{print $1}')
          echo "VERSION_HASH=$VERSION_HASH" >> $GITHUB_ENV
          make defconfig

      - name: Restore DL Cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: dl
          key: boltwrt-dl-${{ env.VERSION_HASH }}

      - name: Fetch Sources
        id: fetch-sources
        if: steps.restore-cache.outputs.cache-hit != 'true'
        working-directory: /home/runner/work/BoltWrt/BoltWrt
        run: |
          echo "Fetching all sources..."
          make download -j6 || (echo "❌ Failed to fetch sources" && exit 1)

      - name: Cache DL Directory
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: dl
          key: boltwrt-dl-${{ env.VERSION_HASH }}

      - name: Restore Toolchain Cache
        id: restore-toolchain-cache
        uses: actions/cache/restore@v4
        with:
          path: staging_dir/toolchain-*
          key: boltwrt-toolchain-${{ hashFiles('toolchain/*', 'include/toolchain.mk') }}

      - name: Build Firmware
        id: build
        working-directory: /home/runner/work/BoltWrt/BoltWrt
        run: |
          echo "Using $(nproc) processors for building"
          make -j $(($(nproc)+1)) || make -j1 V=s
          echo "Build completed successfully."

      - name: Upload Firmware Artifacts
        if: (!cancelled())
        uses: actions/upload-artifact@v4
        with:
          name: BoltWrt-Firmware
          path: |
            bin/targets/x86/64/boltwrt-x86-64-generic-squashfs-combined.img.gz
            bin/targets/x86/64/boltwrt-x86-64-generic-squashfs-combined-efi.img.gz
            bin/targets/x86/64/boltwrt-x86-64-generic-squashfs-combined.vmdk
            bin/targets/x86/64/boltwrt-x86-64-generic-squashfs-combined-efi.vmdk
            bin/targets/x86/64/boltwrt-x86-64-generic.manifest
            bin/targets/x86/64/config.buildinfo
            bin/targets/x86/64/feeds.buildinfo
            bin/targets/x86/64/version.buildinfo
            bin/targets/x86/64/profiles.json
            bin/targets/x86/64/sha256sums

      - name: Cache Toolchain
        uses: actions/cache/save@v4
        with:
          path: staging_dir/toolchain-*
          key: boltwrt-toolchain-${{ hashFiles('toolchain/*', 'include/toolchain.mk') }}

  release:
    name: Release Firmware
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [build]
    runs-on: ubuntu-24.04
    steps:
      - name: Download Firmware Artifacts
        uses: actions/download-artifact@v4
        with:
          name: BoltWrt-Firmware
          path: ./firmware

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: BoltWrt Firmware ${{ github.ref_name }} Release
          files: ./firmware/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}