name: Build Firmware

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Free up disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          tool-cache: false
          swap-storage: false

      - name: Initialize Environment
        run: |
          df -hT .
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget qemu-utils
          sudo timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout Code
        uses: actions/checkout@v5
      
      - name: Setup Feeds
        working-directory: /home/runner/work/BoltWrt/BoltWrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

          # 修改 LuCI 默认主题路径
          sed -i "s#/luci-static/bootstrap#/luci-static/argon#" feeds/luci/modules/luci-base/root/etc/config/luci

          # 修正 luci-nginx 集合包的依赖
          sed -i -E "s/[[:space:]]*\+luci-theme-bootstrap//" feeds/luci/collections/luci-nginx/Makefile

          # 修改 nginx ssl 证书生成配置
          # std::string subject{"/C=ZZ/ST=Somewhere/L=None/CN=OpenWrt/O=OpenWrt"};
          sed -i 's|/C=ZZ/ST=Somewhere/L=None/CN=OpenWrt/O=OpenWrt|/C=CN/ST=Beijing/L=Beijing/CN=BoltWrt/O=BoltWrt|' feeds/packages/net/nginx-util/src/nginx-ssl-util.hpp
          sed -i 's|constexpr[[:space:]]\+auto[[:space:]]\+validity_days[[:space:]]*=[[:space:]]*3[[:space:]]*([[:space:]]*365[[:space:]]*+[[:space:]]*31[[:space:]]*);|constexpr auto validity_days = 3650;|' feeds/packages/net/nginx-util/src/nginx-ssl-util.hpp

      - name: Normalizing Build Configuration
        working-directory: /home/runner/work/BoltWrt/BoltWrt
        run: |
          mv config.txt .config
          VERSION_HASH=$( (cat .config feeds.conf.default 2>/dev/null || true) | sha256sum | awk '{print $1}')
          echo "VERSION_HASH=$VERSION_HASH" >> $GITHUB_ENV
          make defconfig

      - name: Restore DL Cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: /home/runner/work/BoltWrt/BoltWrt/dl
          key: boltwrt-dl-${{ env.VERSION_HASH }}

      - name: Fetch Sources
        id: fetch-sources
        if: steps.restore-cache.outputs.cache-hit != 'true'
        working-directory: /home/runner/work/BoltWrt/BoltWrt
        run: |
          echo "Fetching all sources..."
          make download -j6 || (echo "❌ Failed to fetch sources" && exit 1)

      - name: Cache DL Directory
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: /home/runner/work/BoltWrt/BoltWrt/dl
          key: boltwrt-dl-${{ env.VERSION_HASH }}

      - name: Build Firmware
        id: build
        working-directory: /home/runner/work/BoltWrt/BoltWrt
        run: |
          echo "Using $(nproc) processors for building"
          make -j $(($(nproc)+1)) || make -j1 V=s

          echo "Build completed successfully."

      - name: Check Disk Usage
        if: cancelled()
        working-directory: /home/runner/work/BoltWrt/BoltWrt
        run: df -hT .

      - name: Upload Firmware Artifacts
        if: (!cancelled())
        uses: actions/upload-artifact@v4
        with:
          name: BoltWrt-Firmware
          path: |
            bin/targets/x86/64/boltwrt-x86-64-generic-squashfs-combined.img.gz
            bin/targets/x86/64/boltwrt-x86-64-generic-squashfs-combined-efi.img.gz
            bin/targets/x86/64/boltwrt-x86-64-generic-squashfs-combined.vmdk
            bin/targets/x86/64/boltwrt-x86-64-generic-squashfs-combined-efi.vmdk
            bin/targets/x86/64/boltwrt-x86-64-generic.manifest
            bin/targets/x86/64/config.buildinfo
            bin/targets/x86/64/feeds.buildinfo
            bin/targets/x86/64/version.buildinfo
            bin/targets/x86/64/profiles.json
            bin/targets/x86/64/sha256sums